Starting audit...
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\Main.java:31:45: Using the '.*' form of import should be avoided - main.UtilityClasses.DoCommands.*. [AvoidStarImport]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\Main.java:86:5: Method length is 336 lines (max allowed is 150). [MethodLength]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PagingClasses\PageSystem.java:10:25: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PagingClasses\PageSystem.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:15:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'compareTo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'compareTo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:28:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:32:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:36:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:40:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:44:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'isVisibility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'isVisibility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:48:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setVisibility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setVisibility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:52:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getFollowers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getFollowers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:56:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setFollowers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setFollowers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:60:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:64:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:68:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getOriginalSongOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getOriginalSongOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:72:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setOriginalSongOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setOriginalSongOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:18:29: Using the '.*' form of import should be avoided - main.SelectionClasses.*. [AvoidStarImport]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:27:46: Using the '.*' form of import should be avoided - main.UtilityClasses.GetMessages.*. [AvoidStarImport]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:48:5: Method length is 205 lines (max allowed is 150). [MethodLength]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:1655:5: Method length is 153 lines (max allowed is 150). [MethodLength]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:1655:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:1812:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:1830:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:1847:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:1883:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\GetMessages.java:24:1: Redundant import from the same package - main.UtilityClasses.Constants. [RedundantImport]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\GetMessages.java:939:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\GetMessages.java:1031:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\GetMessages.java:1105:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\SearchSelect.java:11:29: Using the '.*' form of import should be avoided - main.SelectionClasses.*. [AvoidStarImport]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\SearchSelect.java:296:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\VisitorPattern\Visitable.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\VisitorPattern\Visitor.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\VisitorPattern\Visitor.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\VisitorPattern\Visitor.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\VisitorPattern\Visitor.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\VisitorPattern\VisitorClasses\VisitNextMessage.java:6:29: Using the '.*' form of import should be avoided - main.SelectionClasses.*. [AvoidStarImport]
Audit done.
Checkstyle ends with 38 errors.
