Starting audit...
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\CommandHelper\Search.java:3:8: Unused import - fileio.input.UserInput. [UnusedImports]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\CommandHelper\Search.java:10:11: Variable 'steps' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\CommandHelper\Search.java:19:25: Parameter user should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\CommandHelper\Search.java:35:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\CreatorClasses\HostClasses\Announcement.java:7:26: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\CreatorClasses\HostClasses\Announcement.java:14:25: Parameter name should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\CreatorClasses\HostClasses\Announcement.java:22:32: Parameter description should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\CreatorClasses\HostClasses\HostInfo.java:15:25: Parameter host should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\CreatorClasses\HostClasses\HostInfo.java:23:34: Parameter announcements should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\Main.java:10:20: Using the '.*' form of import should be avoided - fileio.input.*. [AvoidStarImport]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\Main.java:32:45: Using the '.*' form of import should be avoided - main.UtilityClasses.DoCommands.*. [AvoidStarImport]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\Main.java:87:5: Method length is 633 lines (max allowed is 150). [MethodLength]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PagingClasses\Page.java:5:8: Unused import - main.CreatorClasses.HostClasses.Announcement. [UnusedImports]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PagingClasses\Page.java:9:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PagingClasses\Page.java:56:29: Parameter hostInfo should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PagingClasses\PageSystem.java:10:25: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PagingClasses\PageSystem.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:15:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'compareTo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'compareTo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:28:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:32:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:36:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:40:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:44:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'isVisibility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'isVisibility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:48:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setVisibility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setVisibility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:52:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getFollowers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getFollowers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:56:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setFollowers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setFollowers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:60:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:64:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:68:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getOriginalSongOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getOriginalSongOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:72:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setOriginalSongOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setOriginalSongOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\UserPlaylists.java:64:29: Parameter podcasts should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\SelectionClasses\Creators\HostSelection.java:15:25: Parameter host should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:1: File length is 2,004 lines (max allowed is 2,000). [FileLength]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:5:20: Using the '.*' form of import should be avoided - fileio.input.*. [AvoidStarImport]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:18:29: Using the '.*' form of import should be avoided - main.SelectionClasses.*. [AvoidStarImport]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:27:46: Using the '.*' form of import should be avoided - main.UtilityClasses.GetMessages.*. [AvoidStarImport]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:47:5: Method length is 232 lines (max allowed is 150). [MethodLength]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:267:45: '=' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:352:33: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:1715:5: Method length is 189 lines (max allowed is 150). [MethodLength]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:1715:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:1908:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:1926:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:1943:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:1979:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\GetMessages.java:3:8: Unused import - com.fasterxml.jackson.databind.introspect.Annotated. [UnusedImports]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\GetMessages.java:951:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\GetMessages.java:1043:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\GetMessages.java:1117:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\SearchSelect.java:13:29: Using the '.*' form of import should be avoided - main.SelectionClasses.*. [AvoidStarImport]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\SearchSelect.java:298:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\SearchSelect.java:311:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\VisitorPattern\Visitable.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\VisitorPattern\Visitor.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\VisitorPattern\Visitor.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\VisitorPattern\Visitor.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\VisitorPattern\Visitor.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\VisitorPattern\VisitorClasses\VisitNextMessage.java:6:29: Using the '.*' form of import should be avoided - main.SelectionClasses.*. [AvoidStarImport]
Audit done.
Checkstyle ends with 58 errors.
