Starting audit...
[ERROR] D:\JetBrains\etapa-1-POO\.\src\fileio\input\PodcastInput.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:17:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:21:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:21:28: Parameter command should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:25:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:29:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:29:29: Parameter username should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:33:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:37:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:37:30: Parameter timestamp should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:41:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:45:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:45:25: Parameter type should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:49:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:53:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:53:28: Parameter filters should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:57:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getItemNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getItemNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:61:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setItemNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setItemNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:61:31: Parameter itemNumber should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:65:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getPlaylistName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getPlaylistName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:69:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setPlaylistName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setPlaylistName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:69:33: Parameter playlistName should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:73:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getPlaylistId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getPlaylistId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:77:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setPlaylistId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setPlaylistId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:77:31: Parameter playlistId should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:81:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'getSeed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'getSeed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:85:5: Class 'Command' looks like designed for extension (can be subclassed), but the method 'setSeed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Command' final or making the method 'setSeed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Command.java:85:25: Parameter seed should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:24:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:28:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:28:25: Parameter name should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:32:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:36:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setAlbum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setAlbum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:36:26: Parameter album should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:40:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getTags' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getTags' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:44:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setTags' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setTags' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:44:25: Parameter tags should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:48:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getLyrics' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getLyrics' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:52:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setLyrics' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setLyrics' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:52:27: Parameter lyrics should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:56:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:60:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:60:26: Parameter genre should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:64:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getReleaseYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getReleaseYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:68:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setReleaseYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setReleaseYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:68:32: Parameter releaseYear should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:72:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getArtist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getArtist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:76:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setArtist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setArtist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:76:27: Parameter artist should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:80:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:84:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Filters.java:84:26: Parameter owner should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:3:8: Unused import - fileio.input.SongInput. [UnusedImports]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:16:5: Class 'ItemSelection' looks like designed for extension (can be subclassed), but the method 'getUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ItemSelection' final or making the method 'getUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:20:5: Class 'ItemSelection' looks like designed for extension (can be subclassed), but the method 'setUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ItemSelection' final or making the method 'setUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:20:25: Parameter user should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:24:5: Class 'ItemSelection' looks like designed for extension (can be subclassed), but the method 'getStartTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ItemSelection' final or making the method 'getStartTime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:28:5: Class 'ItemSelection' looks like designed for extension (can be subclassed), but the method 'setStartTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ItemSelection' final or making the method 'setStartTime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:28:30: Parameter startTime should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:32:5: Class 'ItemSelection' looks like designed for extension (can be subclassed), but the method 'getRemainingTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ItemSelection' final or making the method 'getRemainingTime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:36:5: Class 'ItemSelection' looks like designed for extension (can be subclassed), but the method 'setRemainingTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ItemSelection' final or making the method 'setRemainingTime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:36:34: Parameter remainingTime should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:40:5: Class 'ItemSelection' looks like designed for extension (can be subclassed), but the method 'getRepeat' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ItemSelection' final or making the method 'getRepeat' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:44:5: Class 'ItemSelection' looks like designed for extension (can be subclassed), but the method 'setRepeat' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ItemSelection' final or making the method 'setRepeat' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:44:27: Parameter repeat should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:48:5: Class 'ItemSelection' looks like designed for extension (can be subclassed), but the method 'isShuffle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ItemSelection' final or making the method 'isShuffle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:52:5: Class 'ItemSelection' looks like designed for extension (can be subclassed), but the method 'setShuffle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ItemSelection' final or making the method 'setShuffle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:52:28: Parameter shuffle should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:56:5: Class 'ItemSelection' looks like designed for extension (can be subclassed), but the method 'isPaused' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ItemSelection' final or making the method 'isPaused' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:60:5: Class 'ItemSelection' looks like designed for extension (can be subclassed), but the method 'setPaused' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ItemSelection' final or making the method 'setPaused' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:60:27: Parameter paused should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:64:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:64:37: Parameter crtTimestamp should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:64:54: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:64:54: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\ItemSelection.java:64:55: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1: File length is 2,172 lines (max allowed is 2,000). [FileLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:10:20: Using the '.*' form of import should be avoided - fileio.input.*. [AvoidStarImport]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:17:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:71:5: Method length is 835 lines (max allowed is 150). [MethodLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:83:57: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:83:58: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:127:13: 'switch' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:164:49: '5' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:165:48: '5' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:169: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:172:46: '>' is preceded with whitespace. [GenericWhitespace]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:193: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:197:49: '5' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:198:48: '5' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:202: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:205:46: '>' is preceded with whitespace. [GenericWhitespace]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:226:49: '5' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:227:48: '5' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:231: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:234:46: '>' is preceded with whitespace. [GenericWhitespace]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:247: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:287:46: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:288: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:294: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:310: Line is longer than 100 characters (found 127). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:326: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:425: Line is longer than 100 characters (found 126). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:442: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:451: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:456: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:509: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:558: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:590: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:598:29: switch without "default" clause. [MissingSwitchDefault]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:622:29: switch without "default" clause. [MissingSwitchDefault]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:665: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:797: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:815: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:819: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:858:53: '5' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:859:52: '5' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:881:56: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:885:50: '5' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:886:49: '5' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:909: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:909:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:909:39: Parameter filters should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:909:56: Parameter result should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:909:85: Parameter library should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:970: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1052: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1052:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1052:43: Parameter filters should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1052:60: Parameter result should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1052:88: Parameter playlists should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1079: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1079:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1079:42: Parameter filters should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1079:59: Parameter result should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1079:91: Parameter library should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1106: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1106:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1106:43: Parameter lastSearchResult should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1106:79: Parameter crtCommand should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1106:99: Parameter steps should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1120:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1120:50: Parameter crtCommand should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1120:70: Parameter library should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1121:50: Parameter lastSearchResult should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1141: Line is longer than 100 characters (found 145). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1141:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1141:58: Parameter crtCommand should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1141:78: Parameter playlists should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1141:109: Parameter lastSearchResult should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1160: Line is longer than 100 characters (found 134). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1160:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1160:56: Parameter crtCommand should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1160:76: Parameter library should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1160:98: Parameter lastSearchResult should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1179:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1179:45: Parameter lastSearchResult should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1180:45: Parameter names should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1180:70: Parameter type should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1190: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1190:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1190:39: Parameter reqItem should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1190:62: Parameter objectMapper should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1190:89: Parameter crtCommand should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1303: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1335: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1335:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1335:46: Parameter player should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1335:79: Parameter playlists should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1336:46: Parameter crtCommand should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1360:32: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1411: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1411:5: Method length is 152 lines (max allowed is 150). [MethodLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1411:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1411:41: Parameter player should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1411:74: Parameter usersPlaylists should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1412:41: Parameter crtCommand should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1412:61: Parameter songsLikes should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1565:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1565:37: Parameter playlist should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1582:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1582:44: Parameter copyItem should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1582:72: Parameter crtCommand should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1588: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1611: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1693:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1693:37: Parameter player should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1693:70: Parameter crtCommand should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1694:38: Parameter podcasts should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1717:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1717:44: Parameter crtItem should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1717:67: Parameter crtCommand should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1744:72: '90' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1775:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1775:45: Parameter crtItem should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1802:72: '90' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1831:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1831:41: Parameter crtItem should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1831:64: Parameter player should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1832:42: Parameter podcasts should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1868:91: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1888:95: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1891:79: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1896:95: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1924:95: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1932:95: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1945:79: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1950:95: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1960:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1960:41: Parameter crtItem should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1960:64: Parameter player should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1972:92: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:1995:96: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2003: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2007: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2007:104: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2008: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2013: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2013:104: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2020: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2022:100: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2047:96: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2055: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2059: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2059:104: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2060: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2065: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2065:104: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2072: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2074:100: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2084:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2084:43: Parameter wantedPlaylist should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2084:68: Parameter crtCommand should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2085:43: Parameter usersPlaylists should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2127: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2127:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2127:53: Parameter usersPlaylists should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Main.java:2127:94: Parameter crtCommand should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:4:8: Unused import - fileio.input.UserInput. [UnusedImports]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:8:53: '>' is followed by an illegal character. [GenericWhitespace]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:8:54: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:16:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'compareTo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'compareTo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:17:26: Parameter playlist should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:21:22: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:24:21: Parameter name should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:24:34: Parameter owner should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:29:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:33:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:33:25: Parameter name should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:37:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:41:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:41:26: Parameter songs should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:45:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'isVisibility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'isVisibility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:49:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setVisibility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setVisibility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:49:31: Parameter visibility should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:53:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getFollowers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getFollowers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:57:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setFollowers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setFollowers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:57:30: Parameter followers should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:61:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:65:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:65:26: Parameter owner should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:69:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getOriginalSongOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getOriginalSongOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:73:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setOriginalSongOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setOriginalSongOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:73:38: Parameter originalSongOrder should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:77:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\Playlist.java:77:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\PlaylistSelection.java:3:8: Unused import - fileio.input.SongInput. [UnusedImports]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\PlaylistSelection.java:12:5: Class 'PlaylistSelection' looks like designed for extension (can be subclassed), but the method 'getPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlaylistSelection' final or making the method 'getPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\PlaylistSelection.java:16:5: Class 'PlaylistSelection' looks like designed for extension (can be subclassed), but the method 'setPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlaylistSelection' final or making the method 'setPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\PlaylistSelection.java:16:29: Parameter playlist should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\PlaylistSelection.java:20:5: Class 'PlaylistSelection' looks like designed for extension (can be subclassed), but the method 'getStartTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlaylistSelection' final or making the method 'getStartTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\PlaylistSelection.java:24:5: Class 'PlaylistSelection' looks like designed for extension (can be subclassed), but the method 'setStartTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlaylistSelection' final or making the method 'setStartTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\PlaylistSelection.java:24:35: Parameter startTimestamp should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\PlaylistSelection.java:28:5: Class 'PlaylistSelection' looks like designed for extension (can be subclassed), but the method 'getStopTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlaylistSelection' final or making the method 'getStopTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\PlaylistSelection.java:32:5: Class 'PlaylistSelection' looks like designed for extension (can be subclassed), but the method 'setStopTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlaylistSelection' final or making the method 'setStopTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\PlaylistSelection.java:32:34: Parameter stopTimestamp should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\PlaylistSelection.java:36:5: Class 'PlaylistSelection' looks like designed for extension (can be subclassed), but the method 'updateRemainingTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlaylistSelection' final or making the method 'updateRemainingTime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\PlaylistSelection.java:37:37: Parameter crtTimestamp should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\PodcastSelection.java:11:5: Class 'PodcastSelection' looks like designed for extension (can be subclassed), but the method 'getPodcast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PodcastSelection' final or making the method 'getPodcast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\PodcastSelection.java:15:5: Class 'PodcastSelection' looks like designed for extension (can be subclassed), but the method 'setPodcast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PodcastSelection' final or making the method 'setPodcast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\PodcastSelection.java:15:28: Parameter podcast should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\PodcastSelection.java:19:5: Class 'PodcastSelection' looks like designed for extension (can be subclassed), but the method 'updateRemainingTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PodcastSelection' final or making the method 'updateRemainingTime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\PodcastSelection.java:20:37: Parameter crtTimestamp should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\SongLikes.java:5:55: '>' is followed by an illegal character. [GenericWhitespace]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\SongLikes.java:5:56: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\SongLikes.java:10:5: Class 'SongLikes' looks like designed for extension (can be subclassed), but the method 'compareTo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SongLikes' final or making the method 'compareTo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\SongLikes.java:11:26: Parameter songLikes should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\SongLikes.java:18:5: Class 'SongLikes' looks like designed for extension (can be subclassed), but the method 'getSong' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SongLikes' final or making the method 'getSong' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\SongLikes.java:22:5: Class 'SongLikes' looks like designed for extension (can be subclassed), but the method 'setSong' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SongLikes' final or making the method 'setSong' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\SongLikes.java:22:25: Parameter song should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\SongLikes.java:26:5: Class 'SongLikes' looks like designed for extension (can be subclassed), but the method 'getLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SongLikes' final or making the method 'getLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\SongLikes.java:30:5: Class 'SongLikes' looks like designed for extension (can be subclassed), but the method 'setLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SongLikes' final or making the method 'setLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\SongLikes.java:30:26: Parameter likes should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\SongSelection.java:11:5: Class 'SongSelection' looks like designed for extension (can be subclassed), but the method 'getSong' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SongSelection' final or making the method 'getSong' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\SongSelection.java:15:5: Class 'SongSelection' looks like designed for extension (can be subclassed), but the method 'setSong' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SongSelection' final or making the method 'setSong' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\SongSelection.java:15:25: Parameter song should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\SongSelection.java:19:5: Class 'SongSelection' looks like designed for extension (can be subclassed), but the method 'updateRemainingTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SongSelection' final or making the method 'updateRemainingTime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\SongSelection.java:20:37: Parameter crtTimestamp should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\UserPlaylists.java:14:27: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\UserPlaylists.java:17:5: Class 'UserPlaylists' looks like designed for extension (can be subclassed), but the method 'getUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPlaylists' final or making the method 'getUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\UserPlaylists.java:21:5: Class 'UserPlaylists' looks like designed for extension (can be subclassed), but the method 'setUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPlaylists' final or making the method 'setUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\UserPlaylists.java:21:25: Parameter user should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\UserPlaylists.java:25:5: Class 'UserPlaylists' looks like designed for extension (can be subclassed), but the method 'getPlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPlaylists' final or making the method 'getPlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\UserPlaylists.java:29:5: Class 'UserPlaylists' looks like designed for extension (can be subclassed), but the method 'setPlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPlaylists' final or making the method 'setPlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\UserPlaylists.java:29:30: Parameter userPlaylists should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\UserPlaylists.java:33:5: Class 'UserPlaylists' looks like designed for extension (can be subclassed), but the method 'getLikedSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPlaylists' final or making the method 'getLikedSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\UserPlaylists.java:37:5: Class 'UserPlaylists' looks like designed for extension (can be subclassed), but the method 'setLikedSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPlaylists' final or making the method 'setLikedSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\UserPlaylists.java:37:31: Parameter likedSongs should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\UserPlaylists.java:41:5: Class 'UserPlaylists' looks like designed for extension (can be subclassed), but the method 'getFollowedPlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPlaylists' final or making the method 'getFollowedPlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\UserPlaylists.java:45:5: Class 'UserPlaylists' looks like designed for extension (can be subclassed), but the method 'setFollowedPlaylists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPlaylists' final or making the method 'setFollowedPlaylists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-1-POO\.\src\main\UserPlaylists.java:45:38: Parameter followedPlaylists should be final. [FinalParameters]
Audit done.
Checkstyle ends with 311 errors.
