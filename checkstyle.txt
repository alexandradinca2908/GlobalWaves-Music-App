Starting audit...
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\ArtistClasses\Merch.java:11:5: Class 'Merch' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Merch' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\ArtistClasses\Merch.java:15:5: Class 'Merch' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Merch' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\ArtistClasses\Merch.java:19:5: Class 'Merch' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Merch' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\ArtistClasses\Merch.java:23:5: Class 'Merch' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Merch' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\ArtistClasses\Merch.java:27:5: Class 'Merch' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Merch' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\ArtistClasses\Merch.java:31:5: Class 'Merch' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Merch' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\Main.java:33:45: Using the '.*' form of import should be avoided - main.UtilityClasses.DoCommands.*. [AvoidStarImport]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\Main.java:88:5: Method length is 473 lines (max allowed is 150). [MethodLength]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\Main.java:444:39: '31' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\Main.java:444:53: '12' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\Main.java:445:39: '1990' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\Main.java:445:54: '2023' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\Main.java:450:57: '28' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\Main.java:609:5: Method length is 151 lines (max allowed is 150). [MethodLength]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\Main.java:609:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\Main.java:647:46: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\Main.java:660:37: '5' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\Main.java:675:37: '5' is a magic number. [MagicNumber]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PagingClasses\Page.java:17:30: Parameter pageOwner should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PagingClasses\Page.java:41:31: Parameter management should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PagingClasses\PageSystem.java:3:8: Unused import - main.PlaylistClasses.UserPlaylists. [UnusedImports]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PagingClasses\PageSystem.java:12:25: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PagingClasses\PageSystem.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Album.java:3:8: Unused import - fileio.input.SongInput. [UnusedImports]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Album.java:5:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:15:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'compareTo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'compareTo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:28:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:32:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:36:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:40:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setSongs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setSongs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:44:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'isVisibility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'isVisibility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:48:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setVisibility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setVisibility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:52:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getFollowers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getFollowers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:56:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setFollowers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setFollowers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:60:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:64:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setOwner' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setOwner' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:68:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'getOriginalSongOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'getOriginalSongOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\PlaylistClasses\Playlist.java:72:5: Class 'Playlist' looks like designed for extension (can be subclassed), but the method 'setOriginalSongOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Playlist' final or making the method 'setOriginalSongOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\SelectionClasses\ArtistSelection.java:15:27: Parameter artist should be final. [FinalParameters]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\SelectionClasses\PlaylistSelection.java:15:5: Class 'PlaylistSelection' looks like designed for extension (can be subclassed), but the method 'getPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlaylistSelection' final or making the method 'getPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\SelectionClasses\PlaylistSelection.java:19:5: Class 'PlaylistSelection' looks like designed for extension (can be subclassed), but the method 'setPlaylist' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlaylistSelection' final or making the method 'setPlaylist' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\SelectionClasses\PlaylistSelection.java:23:5: Class 'PlaylistSelection' looks like designed for extension (can be subclassed), but the method 'getStartTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlaylistSelection' final or making the method 'getStartTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\SelectionClasses\PlaylistSelection.java:27:5: Class 'PlaylistSelection' looks like designed for extension (can be subclassed), but the method 'setStartTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlaylistSelection' final or making the method 'setStartTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\SelectionClasses\PlaylistSelection.java:31:5: Class 'PlaylistSelection' looks like designed for extension (can be subclassed), but the method 'getStopTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlaylistSelection' final or making the method 'getStopTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\SelectionClasses\PlaylistSelection.java:35:5: Class 'PlaylistSelection' looks like designed for extension (can be subclassed), but the method 'setStopTimestamp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlaylistSelection' final or making the method 'setStopTimestamp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\SelectionClasses\PlaylistSelection.java:39:5: Class 'PlaylistSelection' looks like designed for extension (can be subclassed), but the method 'updateRemainingTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlaylistSelection' final or making the method 'updateRemainingTime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\SelectionClasses\PlaylistSelection.java:106:5: Class 'PlaylistSelection' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlaylistSelection' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\DoCommands.java:47:5: Method length is 194 lines (max allowed is 150). [MethodLength]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\GetMessages.java:166:61: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\SearchSelect.java:11:8: Unused import - main.SelectionClasses.ArtistSelection. [UnusedImports]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\UtilityClasses\SearchSelect.java:298:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\VisitorPattern\Visitable.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\VisitorPattern\Visitor.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\VisitorPattern\Visitor.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\VisitorPattern\Visitor.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JetBrains\etapa-2-POO\.\src\main\VisitorPattern\VisitorClasses\VisitPrevMessage.java:19:25: Parameter crtItem should be final. [FinalParameters]
Audit done.
Checkstyle ends with 56 errors.
